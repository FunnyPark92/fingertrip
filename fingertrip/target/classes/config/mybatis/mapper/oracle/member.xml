<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.member">
	<insert id="insertMember" parameterType="MemberVO">
		INSERT INTO MEMBER(MEMBER_NO, NAME, ID, PASSWORD, EMAIL1, EMAIL2, 
						HP1, HP2, HP3, ZIPCODE, ADDRESS, ADDRESS_DETAIL, GENDER, MAIL_AGREEMENT)
		VALUES(MEMBER_SEQ.NEXTVAL, #{name}, #{id}, #{password}, #{email1}, #{email2},
			 #{hp1}, #{hp2}, #{hp3}, #{zipcode}, #{address}, #{addressDetail}, #{gender}, #{mailAgreement})
	</insert>
	
	<select id="selectDbPwd" parameterType="string" resultType="string">
		SELECT PASSWORD FROM MEMBER WHERE ID=#{id} AND OUT_DATE IS NULL 
	</select>
	
	<select id="findId" parameterType="MemberVo" resultType="string">
		select id from member
		where name=#{name} and email1=#{email1} and email2=#{email2}
	</select>
	
	<select id="findPwCnt" parameterType="MemberVo" resultType="int">
		select count(*) from member
		where id=#{id} and email1=#{email1} and email2=#{email2}
	</select>
	
	<update id="updatePw" parameterType="MemberVo">
		update member
		set password=#{password}
		where id=#{id} and email1=#{email1} and email2=#{email2}
	</update>
	
	<update id="memberOut" parameterType="MemberVo">
		update member
		set out_date=sysdate, 
			<![CDATA[
			out_reason_no=case when 0<#{outReasonNo} then #{outReasonNo}
			]]>
		   						else null end
		where id=#{id}
	</update>
	
	<update id="memberLogOut" parameterType="String">
		update member set logout_date = sysdate where id =#{id}
	</update>
	
	<select id="userCheckId" parameterType="String" resultType="int">
		select count(*) from member where id =#{id}
	</select>
	
	<update id="emailAuth" parameterType="String">
		update member set mail_authen = 'Y' where id= #{id}
	</update>
	
	<select id="checkMail" parameterType="String" resultType="int">
		select count(*) from member where id=#{id} and mail_authen ='N'
	</select>
   
    <update id="memberEdit" parameterType="memberVo">
   		update member set 
   		<if test="password != null and password !=''">
   			password = #{password},
   		</if>
   		hp1=#{hp1}, hp2=#{hp2},hp3=#{hp3},zipcode = #{zipcode},address=#{address} ,address_detail = #{addressDetail} 
   		where id= #{id}
    </update>
	
	<select id="logingMember" parameterType="String" resultType="MemberVo">
		select * from member where id=#{id}
	</select>
	
	<select id="selectMember" parameterType="int" resultType="MemberVo">
		SELECT * FROM MEMBER WHERE MEMBER_NO=#{memberNo}
	</select>
	
	<select id="selectAll" parameterType="SearchVo" resultType="MemberVo">
		select *
			from (
				select rownum as RNUM, list.*
				from(
					select * from member
					where
					<if test="searchKeyword!=null and searchKeyword!=''">
						${searchCondition} like '%' || #{searchKeyword} || '%' and
					</if>
						out_date is null
					order by member_no desc
					)list
				)
			<![CDATA[
			where RNUM>#{firstRecordIndex} and RNUM<=#{firstRecordIndex}+#{recordCountPerPage} 
			]]>
	</select>
	
	<select id="memberTotalRecord" resultType="int">
		select count(*) from member
		where out_date is null
	</select>
	
	<select id="deleteSelectAll" parameterType="SearchVo" resultType="MemberVo">
		select *
			from (
				select rownum as RNUM, list.*
				from(
					select * from member
					where
					<if test="searchKeyword!=null and searchKeyword!=''">
						${searchCondition} like '%' || #{searchKeyword} || '%' and
					</if>
						out_date is not null
					order by member_no desc
					)list
				)
			<![CDATA[
			where RNUM>#{firstRecordIndex} and RNUM<=#{firstRecordIndex}+#{recordCountPerPage} 
			]]>
	</select>

	<select id="deleteMemberTotalRecord" resultType="int">
		select count(*) from member
		where out_date is not null
	</select>
	
	<select id="outLeason" parameterType="int" resultType="map">
		select o.out_reason from
		member m join out_reason o
		on m.OUT_REASON_NO=o.OUT_REASON_NO
		where member_no=#{memberNo}
	</select>
	
	<update id="adminDeleteMember" parameterType="int">
		update member
		set out_date=sysdate, out_reason_no=100
		where member_no=#{memberNo}
    </update>
    
	<update id="minusHeart" parameterType="int">
		UPDATE MEMBER 
		SET HEART_COUNT=HEART_COUNT-1
		WHERE MEMBER_NO=#{memberNo}
	</update>
	
	<update id="plusHeart" parameterType="int">
		UPDATE MEMBER 
		SET HEART_COUNT=HEART_COUNT+#{heartChargeCount}
		WHERE MEMBER_NO=#{memberNo}
	</update>
	
	<update id="pressHeart" parameterType="String">
		update member set heart_count = heart_count -1 where id = #{id} and  heart_count > 0
	</update>
	
	<select id="selectOutReason" resultType="outReasonVo">
		select * from out_reason
		order by out_reason_no
	</select>
	
	<select id="selectOutReasonCount" parameterType="int" resultType="int">
		select count(*) from member
		where out_reason_no=#{outReasonNo}
	</select>
	
	<select id="selectMemberCnt" resultType="int">
		select count(*) from member
	</select>
	
	<select id="selectJoinCnt" parameterType="String" resultType="int">
		select count(*) from member
		where join_date between to_date(#{fDay},'YYYYMMDD') and last_day(#{fDay})
	</select>
	
	<select id="selectOutCnt" parameterType="String" resultType="int">
		select count(*) from member
		where out_date between to_date(#{fDay},'YYYYMMDD') and last_day(#{fDay})
	</select>
</mapper>
